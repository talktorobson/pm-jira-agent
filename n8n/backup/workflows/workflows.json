[{"createdAt":"2025-03-15T21:05:42.428Z","updatedAt":"2025-03-15T22:30:38.195Z","id":"mZHweQroC06tHuus","name":"PM - Get Product Overview","active":false,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"387a9bc6-140f-4b38-b9ac-7df18a119fbc","name":"When Executed by Another Workflow"},{"parameters":{"resource":"block","operation":"getAll","blockId":{"__rl":true,"value":"https://www.notion.so/aclarify/Wrkbelt-Comprehensive-Product-Overview-1b7c61700bed806daf58d3fbf44dea3f?pvs=4","mode":"url"},"returnAll":true},"type":"n8n-nodes-base.notion","typeVersion":2.2,"position":[220,0],"id":"d528e403-8938-4ca9-bfd0-2dcc999deb6a","name":"Notion","alwaysOutputData":true,"credentials":{"notionApi":{"id":"IxWB42147qb4KBJZ","name":"Notion account"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"content"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[440,0],"id":"3ce18adb-babf-40d2-b99b-aa9ea7b57816","name":"Aggregate"},{"parameters":{"assignments":{"assignments":[{"id":"4e654544-8775-4158-b0af-d7389931b039","name":"content","value":"={{ $json.content.join() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[660,0],"id":"fd399a79-c564-4cc6-b44e-e4358e98df0b","name":"Edit Fields"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Notion","type":"main","index":0}]]},"Notion":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"09c502a0-2834-489d-8429-970e4a44a287","triggerCount":0,"tags":[{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"}]},{"createdAt":"2025-03-16T00:08:35.187Z","updatedAt":"2025-03-16T23:26:31.663Z","id":"nMOc2am9zEVCkMGK","name":"PM - Iterate on Jira Story Given Feedback","active":false,"nodes":[{"parameters":{"inputSource":"jsonExample","jsonExample":"{\n  \"Previous Jira Ticket\": {\n    \"Jira Ticket Summary\": \"TestRail Setup: Configure TestRail as test management tool\",\n    \"Jira Ticket Description\": \"## User Story\\n\\nAs a quality engineer, I want TestRail configured and integrated with our development workflow, so our team can effectively manage and execute test cases.\\n\\n## Context\\n\\n* TestRail is a widely used test case management tool that integrates well with Jira\\n* We need a centralized place to store and execute test cases\\n* Previous story WEN-630 called for selecting a test management tool\\n\\n## Acceptance Criteria\\n\\n* TestRail instance is set up and accessible to the team\\n* TestRail is integrated with our Jira instance\\n* Test case template/structure is defined in TestRail\\n* Initial test suites are created matching our product structure\\n* Documentation exists in Dev-Docs on how to:\\n  * Create test cases\\n  * Execute test runs\\n  * View reports\\n* Team members have appropriate access levels configured\\n* TestRail API access is configured for potential automation integration\\n\\n## Resources\\n\\n* [TestRail Documentation](https://www.gurock.com/testrail/docs/)\\n* [TestRail-Jira Integration Guide](https://www.gurock.com/testrail/docs/integrate/tools/jira/)\",\n    \"Jira Ticket Labels\": [\n      \"Quality_Assurance\",\n      \"Groomed\",\n      \"V0.0.1\"\n    ],\n    \"Jira Ticket Fix Version\": \"V0.0.1\",\n    \"Jira Ticket Epic Id\": \"WEN-417\"\n  },\n  \"Tech Lead Feedback\": {\n    \"Score\": 0.7,\n    \"Feedback\": \"The ticket WEN-472 'Vendor Script: Implement scheduler config check via API integration' is fairly well structured but has some areas for improvement:\\n\\nStrengths:\\n- Clear user story that describes the goal\\n- Acceptance criteria breaks down the key requirements\\n- Good technical details around API payloads and error handling\\n- Includes validation and error handling requirements\\n\\nAreas for Improvement:\\n- Could benefit from a 'Context' section explaining the overall workflow and how this fits in\\n- 'Out of Scope' section would help clarify boundaries\\n- No mention of non-functional requirements like performance expectations\\n- Could provide more details on expected error scenarios and how to handle them\\n- Missing information about test coverage expectations\\n\\nThe ticket seems implementation-ready but would benefit from additional context and clarification of non-functional requirements. Given the complexity of integrating with APIs and handling configurations, a medium-high estimate seems appropriate based on reference tickets.\",\n    \"estimatedTime\": 21600\n  }\n}"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[80,0],"id":"6196ac99-e0b3-4171-a36a-c48bca2c8f1b","name":"When Executed by Another Workflow"},{"parameters":{"promptType":"define","text":"=You are a highly experienced product manager with deep experience in building SaaS products, adhering to Agile best practices, and crafting comprehensive, clear, and highly effective Jira stories for your engineering teams. You are working on creating a new Jira Ticket and have received constructive feedback from your tech lead/principal engineer. Given the previous iteration of the Jira Story, your tech lead's feedback, as well as the Product Overview as well as the team's Current Jira Tickets below, please craft an enhanced Jira ticket in the following format:\n\n---\nJSON output format:\n{\n  \"issueType\": \"<Story, Bug, Task, Epic>\",\n  \"summary\": \"<Feature Name>: <Concise summary for given the feature prompt>\",\n  \"description\": \"h2. User Story\\n\\nAs a <persona type>, I want <something to exist, be done, etc>, so <I or someone related to me can benefit in XYZ way>.\\n\\nh2. Context\\n\\n* <Some contextual information 1>\\n* <Some contextual information 2>\\n* <Some contextual information 3>\\n\\nh2. Acceptance Criteria\\n\\n* <Acceptance criteria bullet point 1 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 2 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 3 (functional and/or non-functional requirement)>\\n\\nh2. Resources\\n\\n* <Any relevant resource 1>\\n* <Any relevant resource 2>\",\n  \"labels\": [\"<new or pre-existing label 1 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\", \"<new or pre-existing label 2 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\"],\n  \"fixVersion\": \"<Either our current fixVersion, 'V0.0.1', or our future next release, 'V0.0.2'>\",\n  \"epicId\": \"<If a pre-existing suitable epic exists from our pre-existing Jira Stories, then use its id here>\",\n  \"estimatedTime\": <The tech lead's estimated amount of time for completing the ticket in seconds, based on the tech lead's understanding of how long previous similar work has taken by looking at other Jira tickets as well as his instinct given his many years of software development>\n}\n---\n\n## Previous Jira Ticket Iteration:\n\n{{ $('When Executed by Another Workflow').item.json['Previous Jira Ticket'].toJsonString() }}\n\n---\n\n## Tech Lead Feedback:\n\nScore: {{ $('When Executed by Another Workflow').item.json['Tech Lead Feedback'].Score }}\n\nFeedback: {{ $('When Executed by Another Workflow').item.json['Tech Lead Feedback'].Feedback }}\n\nEstimated Time: {{ $('When Executed by Another Workflow').item.json['Tech Lead Feedback'].estimatedTime }} seconds\n\n---\n\n## Product Overview: \n\n{{ $('Get Project Overview').item.json.content }}\n\n---\n\n## Current Jira Tickets:\n\n{{ $json['Jira Ticket'] }}","hasOutputParser":true},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[860,0],"id":"95bb5cbc-bc88-4b03-9f66-d90068b9e913","name":"Basic LLM Chain"},{"parameters":{"model":{"__rl":true,"value":"claude-3-5-sonnet-20241022","mode":"list","cachedResultName":"Claude 3.5 Sonnet (New)"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[880,220],"id":"973b4a52-d9a8-401b-a924-69b0f4d12ce1","name":"Anthropic Chat Model","credentials":{"anthropicApi":{"id":"8j4hE03mna53O4XA","name":"Anthropic account"}}},{"parameters":{"workflowId":{"__rl":true,"value":"VweQcbgbXa4iilLM","mode":"list","cachedResultName":"PM - Get Jira Stories"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[600,0],"id":"ed8f2803-acda-4283-aede-4185ece29b90","name":"Get Jira Stories"},{"parameters":{"workflowId":{"__rl":true,"value":"mZHweQroC06tHuus","mode":"list","cachedResultName":"PM - Get Product Overview"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":["Do it"],"schema":[{"id":"Do it","displayName":"Do it","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[320,0],"id":"2a65da82-af18-49a5-8eee-fcc2bdacdd20","name":"Get Project Overview"},{"parameters":{"jsonSchemaExample":"{\n  \"issueType\": \"<Story, Bug, Task, Epic>\",\n  \"summary\": \"<Feature Name>: <Concise summary for given the feature prompt>\",\n  \"description\": \"h2. User Story\\n\\nAs a <persona type>, I want <something to exist, be done, etc>, so <I or someone related to me can benefit in XYZ way>.\\n\\nh2. Context\\n\\n* <Some contextual information 1>\\n* <Some contextual information 2>\\n* <Some contextual information 3>\\n\\nh2. Acceptance Criteria\\n\\n* <Acceptance criteria bullet point 1 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 2 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 3 (functional and/or non-functional requirement)>\\n\\nh2. Resources\\n\\n* <Any relevant resource 1>\\n* <Any relevant resource 2>\",\n  \"labels\": [\"<new or pre-existing label 1 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\", \"<new or pre-existing label 2 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\"],\n  \"fixVersion\": \"<Either our current fixVersion, 'V0.0.1', or our future next release, 'V0.0.2'>\",\n  \"epicId\": \"<If a pre-existing suitable epic exists from our pre-existing Jira Stories, then use its id here>\",\n  \"estimatedTime\": 7200\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[1040,220],"id":"91f0633f-16bd-4612-87a5-16cf9ab7e2f2","name":"Structured Output Parser"},{"parameters":{"assignments":{"assignments":[{"id":"a9c4f4b8-61c5-4f73-9ff3-e0a59e3a14be","name":"Jira Ticket Type","value":"={{ $json.output.issueType }}","type":"string"},{"id":"8509fecc-88ff-49d4-979b-6dccf47067db","name":"Jira Ticket Summary","value":"={{ $json.output.summary }}","type":"string"},{"id":"0c5fbda3-b23e-4a9b-a59d-8694b00984df","name":"Jira Ticket Description","value":"={{ $json.output.description }}","type":"string"},{"id":"8529b325-89e6-4e4e-b769-1385793a4862","name":"Jira Ticket Labels","value":"={{ $json.output.labels }}","type":"array"},{"id":"5b4def9a-5958-4f1f-baa4-9eacc990adbc","name":"Jira Ticket Fix Version","value":"={{ $json.output.fixVersion }}","type":"string"},{"id":"53f21fdf-ee8f-4d53-a8b9-130f927eaf69","name":"Jira Ticket Epic Id","value":"={{ $json.output.epicId }}","type":"string"},{"id":"1d3659db-b077-49c8-a5a6-364360f453e8","name":"Estimated Time","value":"={{ $json.output.estimatedTime }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1240,0],"id":"bc4bb562-d370-4333-9e48-742151cd8dcb","name":"Edit Fields"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get Project Overview","type":"main","index":0}]]},"Anthropic Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Get Jira Stories":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Get Project Overview":{"main":[[{"node":"Get Jira Stories","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Basic LLM Chain","type":"ai_outputParser","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"Previous Jira Ticket":{"Jira Ticket Summary":"TestRail Setup: Configure TestRail as test management tool","Jira Ticket Description":"## User Story\n\nAs a quality engineer, I want TestRail configured and integrated with our development workflow, so our team can effectively manage and execute test cases.\n\n## Context\n\n* TestRail is a widely used test case management tool that integrates well with Jira\n* We need a centralized place to store and execute test cases\n* Previous story WEN-630 called for selecting a test management tool\n\n## Acceptance Criteria\n\n* TestRail instance is set up and accessible to the team\n* TestRail is integrated with our Jira instance\n* Test case template/structure is defined in TestRail\n* Initial test suites are created matching our product structure\n* Documentation exists in Dev-Docs on how to:\n  * Create test cases\n  * Execute test runs\n  * View reports\n* Team members have appropriate access levels configured\n* TestRail API access is configured for potential automation integration\n\n## Resources\n\n* [TestRail Documentation](https://www.gurock.com/testrail/docs/)\n* [TestRail-Jira Integration Guide](https://www.gurock.com/testrail/docs/integrate/tools/jira/)","Jira Ticket Labels":["Quality_Assurance","Groomed","V0.0.1"],"Jira Ticket Fix Version":"V0.0.1","Jira Ticket Epic Id":"WEN-417"},"Tech Lead Feedback":{"Score":0.7,"Feedback":"The ticket WEN-472 'Vendor Script: Implement scheduler config check via API integration' is fairly well structured but has some areas for improvement:\n\nStrengths:\n- Clear user story that describes the goal\n- Acceptance criteria breaks down the key requirements\n- Good technical details around API payloads and error handling\n- Includes validation and error handling requirements\n\nAreas for Improvement:\n- Could benefit from a 'Context' section explaining the overall workflow and how this fits in\n- 'Out of Scope' section would help clarify boundaries\n- No mention of non-functional requirements like performance expectations\n- Could provide more details on expected error scenarios and how to handle them\n- Missing information about test coverage expectations\n\nThe ticket seems implementation-ready but would benefit from additional context and clarification of non-functional requirements. Given the complexity of integrating with APIs and handling configurations, a medium-high estimate seems appropriate based on reference tickets.","estimatedTime":21600}}}]},"versionId":"28a06d44-7e2b-42af-8843-7a9c54811c40","triggerCount":0,"tags":[{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"}]},{"createdAt":"2025-03-15T23:25:19.315Z","updatedAt":"2025-03-16T23:28:33.907Z","id":"REznce0G5qEe0y12","name":"Tech Lead - Give feedback on jira ticket","active":false,"nodes":[{"parameters":{"inputSource":"jsonExample","jsonExample":"{\n  \"Jira Ticket Type\": \"Story\",  \n  \"Jira Ticket Summary\": \"TestRail Setup: Configure TestRail as our test management tool\",\n    \"Jira Ticket Description\": \"## User Story\\n\\nAs a quality engineer, I want TestRail configured and integrated with our development workflow, so our team can efficiently manage and execute test cases.\\n\\n## Context\\n\\n* TestRail is a widely-used test management tool that integrates well with Jira\\n* It provides features for test case management, test execution tracking, and reporting\\n* Having a dedicated test management tool will help standardize our QA processes\\n\\n## Acceptance Criteria\\n\\n* TestRail instance is set up and configured\\n* TestRail is integrated with our Jira instance\\n* Test suites are created to match our key product areas\\n* Sample test cases are created to validate the setup\\n* Documentation is created explaining how to:\\n  - Create and manage test cases\\n  - Execute test runs\\n  - View and generate reports\\n  - Link test cases to Jira issues\\n* Team members are provided access with appropriate roles\\n* Knowledge transfer session is conducted for the team\\n\\n## Resources\\n\\n* TestRail documentation: https://www.gurock.com/testrail/docs/\\n* Jira integration guide: https://www.gurock.com/testrail/docs/integrate/jira/\",\n    \"Jira Ticket Labels\": [\n      \"Quality_Assurance\",\n      \"Groomed\",\n      \"Confidence_High\",\n      \"V0.0.1\"\n    ],\n    \"Jira Ticket Fix Version\": \"V0.0.1\",\n    \"Jira Ticket Epic Id\": \"WEN-417\"\n  }"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"ef25f9f2-75be-4a5d-a758-f403ed60dafe","name":"When Executed by Another Workflow"},{"parameters":{"workflowId":{"__rl":true,"value":"2tglCUvnzd90oEZ1","mode":"list","cachedResultName":"Tech Lead - Get Technical Documentation"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[220,0],"id":"562ed4c0-c33d-40af-b116-7e2127bf40b7","name":"Get Technical Documentation"},{"parameters":{"promptType":"define","text":"=# RULES\nYou are a principal engineer and technical lead for an software engineering team at a company called Wrkbelt. Your role is to work with your product manager who has provided the following new Jira ticket, to ensure the ticket is well composed, filled with any relevant technical details about functional and non-functional requirements, and meets what we consider \"Definition of Ready\".\n\nPlease analyze the proposed jira ticket based on the following criteria:\n\n- Is the summary clear and intuitive for the average engineer on the team?\n- Is the description clear, well organized (includes the required \"User Story\" and \"Acceptance Criteria\" sections and optionally a \"Context\", \"References\", and \"Out of Scope\" section) and intuitive for the average engineer on the team?\n- Does the description highlight functional and non-functional requirements?\n- Does the ticket provide all necessary information for a developer to not have follow up questions (re: UX, behavior, business logic, etc.)?\n\nAfter evaluation, output a score between 0 and 1, representing the quality of the proposed jira ticket. Include your long form feedback as well as an estimated time for development given the precedents in our current estimates for Jira Tickets (see \"References\" section below). The final output format should be JSON:\n\n---\n{\n  \"score\": [insert score here],\n  \"feedback\": \"[Long form feedback]\",\n  \"estimateTime\": [estimate time to complete the ticket in seconds based on the your understanding of how long previous similar work has taken by looking at other Jira tickets as well as using your instinct given your many years of software development>]\n}\n---\n\n#Jira Ticket to Review:\n\nSummary: {{ $('When Executed by Another Workflow').item.json['Jira Ticket Summary'] }}\nDescription: {{ $('When Executed by Another Workflow').item.json['Jira Ticket Description'] }}\nLabels: {{ $('When Executed by Another Workflow').item.json['Jira Ticket Labels'] }}\nFix Version: {{ $('When Executed by Another Workflow').item.json['Jira Ticket Fix Version'] }}\nEpic Id: {{ $('When Executed by Another Workflow').item.json['Jira Ticket Epic Id'] }}\n===\n\n# References\n\nCurrent Jira Tickets with Estimates:\n\n{{ $json['Jira Ticket'] }}","hasOutputParser":true},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[1100,0],"id":"fbbe9522-22f9-43db-9699-0954feeb4175","name":"Basic LLM Chain"},{"parameters":{"model":{"__rl":true,"value":"claude-3-5-sonnet-20241022","mode":"list","cachedResultName":"Claude 3.5 Sonnet (New)"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[1120,220],"id":"2d450fd6-e9e2-40dd-b35b-8e591b18210f","name":"Anthropic Chat Model","credentials":{"anthropicApi":{"id":"8j4hE03mna53O4XA","name":"Anthropic account"}}},{"parameters":{"jsonSchemaExample":"{\n  \"score\": 0.75,\n  \"feedback\": \"Some form of feedback\",\n  \"estimateTime\": 7200\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[1280,220],"id":"2400f3a5-4121-491a-8aa6-6b4d5be5dd35","name":"Structured Output Parser"},{"parameters":{"workflowId":{"__rl":true,"value":"AdtY7HmZ6XUco1j9","mode":"list","cachedResultName":"Tech Lead - Get Technical Standards Docs"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[560,0],"id":"9b3611a4-a414-440e-ae10-4ef491bf2006","name":"Get Technical Standards"},{"parameters":{"assignments":{"assignments":[{"id":"e562ebc1-5b93-476b-9f49-d118cec18550","name":"Score","value":"={{ $json.output.score }}","type":"number"},{"id":"5980f323-9ad0-442d-baa2-c4395bc0e5aa","name":"Feedback","value":"={{ $json.output.feedback }}","type":"string"},{"id":"16f5a153-4d97-45b9-82bc-38cc7d2bdb5a","name":"estimatedTime","value":"={{ $json.output.estimateTime }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1460,0],"id":"1cf1e58f-45b0-490d-b646-3fe6941d5d00","name":"Edit Fields"},{"parameters":{"workflowId":{"__rl":true,"value":"VweQcbgbXa4iilLM","mode":"list","cachedResultName":"PM - Get Jira Stories"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[780,0],"id":"34c714f5-9de9-444c-b95a-fd780b7e5934","name":"Execute Workflow"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get Technical Documentation","type":"main","index":0}]]},"Anthropic Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Get Technical Documentation":{"main":[[{"node":"Get Technical Standards","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Basic LLM Chain","type":"ai_outputParser","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Get Technical Standards":{"main":[[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"Jira Ticket Type":"Story","Jira Ticket Summary":"TestRail Setup: Configure TestRail as our test management tool","Jira Ticket Description":"## User Story\n\nAs a quality engineer, I want TestRail configured and integrated with our development workflow, so our team can efficiently manage and execute test cases.\n\n## Context\n\n* TestRail is a widely-used test management tool that integrates well with Jira\n* It provides features for test case management, test execution tracking, and reporting\n* Having a dedicated test management tool will help standardize our QA processes\n\n## Acceptance Criteria\n\n* TestRail instance is set up and configured\n* TestRail is integrated with our Jira instance\n* Test suites are created to match our key product areas\n* Sample test cases are created to validate the setup\n* Documentation is created explaining how to:\n  - Create and manage test cases\n  - Execute test runs\n  - View and generate reports\n  - Link test cases to Jira issues\n* Team members are provided access with appropriate roles\n* Knowledge transfer session is conducted for the team\n\n## Resources\n\n* TestRail documentation: https://www.gurock.com/testrail/docs/\n* Jira integration guide: https://www.gurock.com/testrail/docs/integrate/jira/","Jira Ticket Labels":["Quality_Assurance","Groomed","Confidence_High","V0.0.1"],"Jira Ticket Fix Version":"V0.0.1","Jira Ticket Epic Id":"WEN-417"}}],"Edit Fields":[{"json":{"Score":0.7,"Feedback":"The ticket WEN-472 'Vendor Script: Implement scheduler config check via API integration' is fairly well structured but has some areas for improvement:\n\nStrengths:\n- Clear user story that describes the goal\n- Acceptance criteria breaks down the key requirements\n- Good technical details around API payloads and error handling\n- Includes validation and error handling requirements\n\nAreas for Improvement:\n- Could benefit from a 'Context' section explaining the overall workflow and how this fits in\n- 'Out of Scope' section would help clarify boundaries\n- No mention of non-functional requirements like performance expectations\n- Could provide more details on expected error scenarios and how to handle them\n- Missing information about test coverage expectations\n\nThe ticket seems implementation-ready but would benefit from additional context and clarification of non-functional requirements. Given the complexity of integrating with APIs and handling configurations, a medium-high estimate seems appropriate based on reference tickets.","estimatedTime":21600}}]},"versionId":"6e346ddb-4a7e-415e-9e21-754a05d6a440","triggerCount":0,"tags":[{"createdAt":"2025-03-15T23:24:16.065Z","updatedAt":"2025-03-15T23:24:16.065Z","id":"boSLrtOvUjqtx5Li","name":"Engineering"},{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"}]},{"createdAt":"2025-03-16T00:02:27.887Z","updatedAt":"2025-03-17T16:18:42.907Z","id":"Z4UFKWNfKXFlZd6n","name":"🤖 Product Manager - Jira Agent","active":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[0,0],"id":"88245eb7-4aaf-4602-9e8e-55b8f3005f41","name":"When chat message received","webhookId":"de765f18-b72b-4502-afcd-886d6185684e"},{"parameters":{"hasOutputParser":true,"options":{"systemMessage":"=You are a highly experienced product manager with deep experience in building SaaS products, adhering to Agile best practices, and crafting comprehensive, clear, and highly effective Jira stories for your engineering teams. Your job is to create a Jira ticket given the issue request below work with your TechLead to refine it until it is high enough quality to meet the standard \"Definition of Ready\". Use the below steps to create and refine the desired jira ticket:\n\n1. Always start by generating an initial Jira ticket by using the `Get_Initial_Jira_Ticket` tool.\n\n2. Once an initial jira ticket has been generated in Step 1, provide it to your tech lead for a score, detailed feedback, and a time estimate for the jira ticket by using the `Get_Tech_Lead_Feedback` tool.\n\n3. If the score is below 0.8, use the feedback from step 2 to refine the post, by calling the `Refine_Jira_Ticket` tool.\n\n5. The final output should be the polished final Jira Ticket following this JSON format:\n\n---\n{\n  \"issueType\": \"<Story, Bug, Task, Epic>\",\n  \"summary\": \"<Feature Name>: <Concise summary for given the feature prompt>\",\n  \"description\": \"h2. User Story\\n\\nAs a <persona type>, I want <something to exist, be done, etc>, so <I or someone related to me can benefit in XYZ way>.\\n\\nh2. Context\\n\\n* <Some contextual information 1>\\n* <Some contextual information 2>\\n* <Some contextual information 3>\\n\\nh2. Acceptance Criteria\\n\\n* <Acceptance criteria bullet point 1 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 2 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 3 (functional and/or non-functional requirement)>\\n\\nh2. Resources\\n\\n* <Any relevant resource 1>\\n* <Any relevant resource 2>\",\n  \"labels\": [\"<new or pre-existing label 1 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\", \"<new or pre-existing label 2 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\"],\n  \"fixVersion\": \"<Either our current fixVersion, 'V0.0.1', or our future next release, 'V0.0.2'>\",\n  \"epicId\": \"<If a pre-existing suitable epic exists from our pre-existing Jira Stories, then use its id here>\",\n  \"estimatedTime\": 7200\n}\n---"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[432,0],"id":"415285e9-af6d-4a44-a338-cab0ec03cda3","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"claude-3-5-sonnet-20241022","mode":"list","cachedResultName":"Claude 3.5 Sonnet (New)"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[40,260],"id":"c70cc270-9456-407d-a416-0b1537af5e52","name":"Anthropic Chat Model","credentials":{"anthropicApi":{"id":"8j4hE03mna53O4XA","name":"Anthropic account"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[200,260],"id":"695cac03-0468-4235-a6cc-a37c907b5553","name":"Simple Memory"},{"parameters":{"name":"Get_Initial_Jira_Ticket","description":"Call this tool to generate a jira ticket object given an issue request or feedback.","workflowId":{"__rl":true,"value":"utSAGcfFNmZxcb9d","mode":"list","cachedResultName":"PM - Generate jira story configuration"},"workflowInputs":{"mappingMode":"defineBelow","value":{"query":"={{ $json.chatInput }}"},"matchingColumns":["query"],"schema":[{"id":"query","displayName":"query","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[360,260],"id":"08656e66-48ae-4395-9ff0-8a5f5f0d6038","name":"Get_Initial_Jira_Ticket"},{"parameters":{"name":"Get_Tech_Lead_Feedback","description":"Call this tool to get feedback on a jira ticket from your technical lead and principal engineer","workflowId":{"__rl":true,"value":"REznce0G5qEe0y12","mode":"list","cachedResultName":"Tech Lead - Give feedback on jira ticket"},"workflowInputs":{"mappingMode":"defineBelow","value":{"Jira Ticket Summary":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Jira_Ticket_Summary', \"The Jira Ticket Summary from calling the `Get_Initial_Jira_Ticket` in the form of a `String`\", 'string') }}","Jira Ticket Description":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Jira_Ticket_Description', \"The Jira Ticket Description from calling the `Get_Initial_Jira_Ticket` in the form of a `String` \", 'string') }}","Jira Ticket Labels":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Jira_Ticket_Labels', \"The Jira Ticket Labels from calling the `Get_Initial_Jira_Ticket` in the form of an `Array of Strings`\", 'string') }}","Jira Ticket Fix Version":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Jira_Ticket_Fix_Version', \"The Jira Ticket Fix Version from calling the `Get_Initial_Jira_Ticket` in the form of a `String` \", 'string') }}","Jira Ticket Epic Id":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Jira_Ticket_Epic_Id', \"The Jira Ticket Epic Idn from calling the `Get_Initial_Jira_Ticket` in the form of a `String` \", 'string') }}","Jira Ticket Type":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Jira_Ticket_Type', \"The Jira Ticket Type from calling the `Get_Initial_Jira_Ticket` in the form of a `String`\", 'string') }}"},"matchingColumns":[],"schema":[{"id":"Jira Ticket Type","displayName":"Jira Ticket Type","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"Jira Ticket Summary","displayName":"Jira Ticket Summary","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"Jira Ticket Description","displayName":"Jira Ticket Description","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"Jira Ticket Labels","displayName":"Jira Ticket Labels","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"array"},{"id":"Jira Ticket Fix Version","displayName":"Jira Ticket Fix Version","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"Jira Ticket Epic Id","displayName":"Jira Ticket Epic Id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[540,260],"id":"08739eb2-f428-4cc7-bd3e-1bd616c0518c","name":"Get_Tech_Lead_Feedback"},{"parameters":{"name":"Refine_Jira_Ticket","workflowId":{"__rl":true,"value":"nMOc2am9zEVCkMGK","mode":"list","cachedResultName":"PM - Iterate on Jira Story Given Feedback"},"workflowInputs":{"mappingMode":"defineBelow","value":{"Previous Jira Ticket":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Previous_Jira_Ticket', \"The Previous Jira Ticket (entire JSON response from calling `Get_Initial_Jira_Ticket`\", 'string') }}","Tech Lead Feedback":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tech_Lead_Feedback', \"The score, feedback, and estimatedTime (entire JSON response) from calling `Get_Tech_Lead_Feedback`\", 'string') }}"},"matchingColumns":[],"schema":[{"id":"Previous Jira Ticket","displayName":"Previous Jira Ticket","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"object"},{"id":"Tech Lead Feedback","displayName":"Tech Lead Feedback","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"object"}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2,"position":[720,260],"id":"e8575d9e-65d4-4811-af98-c0da2f8a1060","name":"Refine_Jira_Ticket"},{"parameters":{"method":"POST","url":"https://aclarify.atlassian.net/rest/api/2/issue","authentication":"predefinedCredentialType","nodeCredentialType":"jiraSoftwareCloudApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n\"fields\": {{ $json.fields.toJsonString() }}\n}","options":{"response":{"response":{}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1240,0],"id":"08e306b7-7068-4304-af4d-4e05ca064ea9","name":"Create Jira Ticket","credentials":{"jiraSoftwareCloudApi":{"id":"uC0GLXClWFEcUFcy","name":"Jira SW Cloud account"}}},{"parameters":{"jsonSchemaExample":"{\n  \"issueType\": \"<Story, Bug, Task, Epic>\",\n  \"summary\": \"<Feature Name>: <Concise summary for given the feature prompt>\",\n  \"description\": \"h2. User Story\\n\\nAs a <persona type>, I want <something to exist, be done, etc>, so <I or someone related to me can benefit in XYZ way>.\\n\\nh2. Context\\n\\n* <Some contextual information 1>\\n* <Some contextual information 2>\\n* <Some contextual information 3>\\n\\nh2. Acceptance Criteria\\n\\n* <Acceptance criteria bullet point 1 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 2 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 3 (functional and/or non-functional requirement)>\\n\\nh2. Resources\\n\\n* <Any relevant resource 1>\\n* <Any relevant resource 2>\",\n  \"labels\": [\"<new or pre-existing label 1 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\", \"<new or pre-existing label 2 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\"],\n  \"fixVersion\": \"<Either our current fixVersion, 'V0.0.1', or our future next release, 'V0.0.2'>\",\n  \"epicId\": \"<If a pre-existing suitable epic exists from our pre-existing Jira Stories, then use its id here>\",\n  \"estimatedTime\": 7200\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[900,260],"id":"ef77bf63-b8e3-4f95-8754-17f119c7271d","name":"Structured Output Parser"},{"parameters":{"content":"## Note\nFor now we are not adding an original estimate to the Jira ticket as these appear fairly flawed for the time being"},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[960,-180],"id":"24481c65-7b16-4692-84e9-05c2a60ddc7e","name":"Sticky Note"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// Get the input data\nconst aiOutput = $input.item.json.output;\n\n// Return just the data object for the next node\nreturn {\n  json: JSON.parse(JSON.stringify({\n    fields: {\n      summary: aiOutput.summary,\n      description: aiOutput.description,\n      labels: aiOutput.labels.concat([\"Created_By_N8N\", \"Needs_Grooming\"]),\n      fixVersions: [{ name: aiOutput.fixVersion }],\n      issuetype: {\n        name: \"Story\",\n      },\n      project: {\n        id: \"10008\",\n      },\n      parent: {\n        key: aiOutput.epicId,\n      },\n    },\n  })),\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1020,0],"id":"909fd77c-d48b-4739-b3ba-323f2a209901","name":"Prepare Jira Ticket Object1","alwaysOutputData":true}],"connections":{"When chat message received":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Anthropic Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Get_Initial_Jira_Ticket":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Get_Tech_Lead_Feedback":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Refine_Jira_Ticket":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"AI Agent":{"main":[[{"node":"Prepare Jira Ticket Object1","type":"main","index":0}]]},"Create Jira Ticket":{"main":[[]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent","type":"ai_outputParser","index":0}]]},"Prepare Jira Ticket Object1":{"main":[[{"node":"Create Jira Ticket","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"e82ce367-6bd6-49f4-aeab-78d08499f37d","triggerCount":0,"tags":[{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"}]},{"createdAt":"2025-03-15T22:51:16.989Z","updatedAt":"2025-03-15T23:39:11.834Z","id":"VweQcbgbXa4iilLM","name":"PM - Get Jira Stories","active":false,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"a17e764e-ea37-434f-bd3e-e52bbc2ae7b0","name":"When Executed by Another Workflow"},{"parameters":{"operation":"getAll","returnAll":true,"options":{"jql":"project = \"WEN\" AND statusCategory != Done"}},"type":"n8n-nodes-base.jira","typeVersion":1,"position":[220,0],"id":"4b769fd6-e3e5-4bda-83e4-2ede6984e9cf","name":"Jira Software","credentials":{"jiraSoftwareCloudApi":{"id":"uC0GLXClWFEcUFcy","name":"Jira SW Cloud account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b2d7c9c4-2305-4da8-8251-e14d24d3646a","name":"Issue Id","value":"={{ $json.key }}","type":"string"},{"id":"7943c608-a950-4290-a138-7c7e11bed3b5","name":"Issue Type","value":"={{ $json.fields.issuetype.name }}","type":"string"},{"id":"ef43f247-9808-4471-ad67-a3ac50b937c7","name":"Epic Id","value":"={{ $json.fields.parent.key }}","type":"string"},{"id":"99ac6698-a834-4b83-a1a1-7f832a7d0ac3","name":"Issue Summary","value":"={{ $json.fields.summary }}","type":"string"},{"id":"e5ae8125-7a70-475f-b4b4-21612cac9cd5","name":"Issue Status","value":"={{ $json.fields.status.name }}","type":"string"},{"id":"66cceac6-fb0c-4f74-bfe1-d5422d4386f0","name":"Issue Priority","value":"={{ $json.fields.priority.name }}","type":"string"},{"id":"044edb31-60de-467a-8910-cbb9cf6a4a8c","name":"Issue Description","value":"={{ $json.fields.description }}","type":"string"},{"id":"21c5c918-b109-48b1-840a-2c6c5fffe029","name":"Issue Fix Version","value":"={{ $json.fields.fixVersions[0].name }}","type":"string"},{"id":"585e4ff4-2740-4a67-95bd-e62fa8167d76","name":"Issue Labels","value":"={{ $json.fields.labels }}","type":"string"},{"id":"9277810d-13f6-4cce-bd94-c91529514332","name":"Original Estimate","value":"={{ $json.fields.timeoriginalestimate }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[440,0],"id":"03707f24-98a3-432f-b79c-df74649cb7aa","name":"Pull desired fields"},{"parameters":{"assignments":{"assignments":[{"id":"44a72499-009c-45aa-8ef0-8257bbca123c","name":"Jira Ticket","value":"=---\nIssue Id: {{ $json['Issue Id'] }}\nIssue Type: {{ $json['Issue Type'] }}\nEpic Id: {{ $json['Epic Id'] }}\nSummary: {{ $json['Issue Summary'] }}\nDescription: {{ $json['Issue Description'] }}\nStatus: {{ $json['Issue Status'] }}\nPriority: {{ $json['Issue Priority'] }}\nFix Version: {{ $json['Issue Fix Version'] }}\nLabels: {{ $json['Issue Labels'] }}\nOriginal Estimate:{{ $json['Original Estimate'] }}\n---","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[660,0],"id":"46eaae79-9a9c-49d9-8414-47a84314b4f4","name":"Construct jira text"},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"Jira Ticket"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[880,0],"id":"415617f0-20e6-4b23-9b67-1594df8249f2","name":"Aggregate all ticket jira text"},{"parameters":{"assignments":{"assignments":[{"id":"9cdad5d3-8a20-4119-b4a3-7fe724bdf8d3","name":"Jira Ticket","value":"={{ $json['Jira Ticket'].join() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1100,0],"id":"0fa77f29-9ba9-4013-b667-89b7579cb62d","name":"Create one single jira text string"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Jira Software","type":"main","index":0}]]},"Jira Software":{"main":[[{"node":"Pull desired fields","type":"main","index":0}]]},"Pull desired fields":{"main":[[{"node":"Construct jira text","type":"main","index":0}]]},"Construct jira text":{"main":[[{"node":"Aggregate all ticket jira text","type":"main","index":0}]]},"Aggregate all ticket jira text":{"main":[[{"node":"Create one single jira text string","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"e717f5ec-332c-40be-bba7-29918703ee2d","triggerCount":0,"tags":[{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"}]},{"createdAt":"2025-03-15T23:22:16.183Z","updatedAt":"2025-03-15T23:56:11.055Z","id":"2tglCUvnzd90oEZ1","name":"Tech Lead - Get Technical Architecture Docs","active":false,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"785173df-c24f-47fc-a7f9-0231af05ae51","name":"When Executed by Another Workflow"},{"parameters":{"resource":"block","operation":"getAll","blockId":{"__rl":true,"value":"https://www.notion.so/aclarify/D-Spec-Scheduler-Architecture-1a5c61700bed806bb536e171f579c9da?pvs=4","mode":"url"},"returnAll":true},"type":"n8n-nodes-base.notion","typeVersion":2.2,"position":[220,0],"id":"0a49f509-e6af-43bf-8ceb-48bca8856096","name":"Notion","credentials":{"notionApi":{"id":"IxWB42147qb4KBJZ","name":"Notion account"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"content"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[440,0],"id":"35fadab1-a03c-4073-af3e-5ad5e8b2059b","name":"Aggregate"},{"parameters":{"assignments":{"assignments":[{"id":"b8eb0efd-e980-4ef4-a344-737147d686dd","name":"content","value":"={{ $json.content.join() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[660,0],"id":"160a9a7a-b0c1-4d9c-b5db-570376fbe94f","name":"Edit Fields"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Notion","type":"main","index":0}]]},"Notion":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"baf56136-5be1-4856-8177-d8b75fb171b9","triggerCount":0,"tags":[{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"},{"createdAt":"2025-03-15T23:24:16.065Z","updatedAt":"2025-03-15T23:24:16.065Z","id":"boSLrtOvUjqtx5Li","name":"Engineering"}]},{"createdAt":"2025-03-15T23:56:29.362Z","updatedAt":"2025-03-15T23:57:30.529Z","id":"AdtY7HmZ6XUco1j9","name":"Tech Lead - Get Technical Standards Docs","active":false,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"2f773436-5fcc-4484-869a-f0d6bb2c104d","name":"When Executed by Another Workflow"},{"parameters":{"resource":"block","operation":"getAll","blockId":{"__rl":true,"value":"https://www.notion.so/aclarify/Technical-Standards-Coding-Quality-Principles-and-Patterns-1b4c61700bed80848863cf86783bafbc?pvs=4","mode":"url"},"returnAll":true},"type":"n8n-nodes-base.notion","typeVersion":2.2,"position":[220,0],"id":"e6b5bcf6-77dd-4768-8053-afc9b05deb6a","name":"Notion","credentials":{"notionApi":{"id":"IxWB42147qb4KBJZ","name":"Notion account"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"content"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[440,0],"id":"a2512202-0e64-4e3c-a7c1-23b9b95a764d","name":"Aggregate"},{"parameters":{"assignments":{"assignments":[{"id":"b8eb0efd-e980-4ef4-a344-737147d686dd","name":"content","value":"={{ $json.content.join() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[660,0],"id":"c8ae0636-9d34-4f22-8d58-1633460025d4","name":"Edit Fields"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Notion","type":"main","index":0}]]},"Notion":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"2ac3f836-738d-478a-9204-6e33146a464d","triggerCount":0,"tags":[{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"},{"createdAt":"2025-03-15T23:24:16.065Z","updatedAt":"2025-03-15T23:24:16.065Z","id":"boSLrtOvUjqtx5Li","name":"Engineering"}]},{"createdAt":"2025-03-15T22:29:01.431Z","updatedAt":"2025-03-16T22:37:49.283Z","id":"utSAGcfFNmZxcb9d","name":"PM - Generate jira story configuration","active":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"query"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[80,0],"id":"0ba14e73-42e6-4fc4-ad7e-dc9a0d843383","name":"When Executed by Another Workflow"},{"parameters":{"promptType":"define","text":"=You are a highly experienced product manager with deep experience in building SaaS products, adhering to Agile best practices, and crafting comprehensive, clear, and highly effective Jira stories for your engineering teams.\n\n## Objective\nCreate a well structured Jira story that aligns with product management, Agile, and Jira best practices given the `Product Overview` our `Issue Request`, as well as our `Current Jira Stories` below. Use Jira's wikimarkup syntax for the description field. Format the output as a JSON object with the following fields:\n\n---\nJSON output format:\n{\n  \"issueType\": \"<Story, Bug, Task, Epic>\",\n  \"summary\": \"<Feature Name>: <Concise summary for given the feature prompt>\",\n  \"description\": \"h2. User Story\\n\\nAs a <persona type>, I want <something to exist, be done, etc>, so <I or someone related to me can benefit in XYZ way>.\\n\\nh2. Context\\n\\n* <Some contextual information 1>\\n* <Some contextual information 2>\\n* <Some contextual information 3>\\n\\nh2. Acceptance Criteria\\n\\n* <Acceptance criteria bullet point 1 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 2 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 3 (functional and/or non-functional requirement)>\\n\\nh2. Resources\\n\\n* <Any relevant resource 1>\\n* <Any relevant resource 2>\",\n \"labels\": [\"<new or pre-existing label 1 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\", \"<new or pre-existing label 2 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\"],\n  \"fixVersion\": \"<Either our current fixVersion, 'V0.0.1', or our future next release, 'V0.0.2'>\",\n  \"epicId\": \"<If a pre-existing suitable epic exists from our pre-existing Jira Stories, then use its id here>\"\n}\n---\n\n## Product Overview: \n\n{{ $('Get Project Overview').item.json.content }}\n\n---\n\n## Issue Request:\n\n{{ $('When Executed by Another Workflow').item.json.query }}\n\n---\n\n## References\n\n### Current Jira Stories:\n{{ $json['Jira Ticket'] }}","hasOutputParser":true},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[860,0],"id":"bf6c46e0-6391-4d66-b01c-71d5a8ea9c75","name":"Basic LLM Chain"},{"parameters":{"model":{"__rl":true,"value":"claude-3-5-sonnet-20241022","mode":"list","cachedResultName":"Claude 3.5 Sonnet (New)"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatAnthropic","typeVersion":1.3,"position":[880,220],"id":"618d5d5f-8cbb-402c-8384-296ac0b630cd","name":"Anthropic Chat Model","credentials":{"anthropicApi":{"id":"8j4hE03mna53O4XA","name":"Anthropic account"}}},{"parameters":{"workflowId":{"__rl":true,"value":"VweQcbgbXa4iilLM","mode":"list","cachedResultName":"PM - Get Jira Stories"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[600,0],"id":"bc789c69-a43b-4807-beb9-6de76ebfadf6","name":"Get Jira Stories"},{"parameters":{"workflowId":{"__rl":true,"value":"mZHweQroC06tHuus","mode":"list","cachedResultName":"PM - Get Product Overview"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":["Do it"],"schema":[{"id":"Do it","displayName":"Do it","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[320,0],"id":"c87cc26d-de74-443b-968d-aec9a6b35d70","name":"Get Project Overview"},{"parameters":{"jsonSchemaExample":"{\n  \"issueType\": \"<Story, Bug, Task, Epic>\",\n  \"summary\": \"<Feature Name>: <Concise summary for given the feature prompt>\",\n  \"description\": \"h2. User Story\\n\\nAs a <persona type>, I want <something to exist, be done, etc>, so <I or someone related to me can benefit in XYZ way>.\\n\\nh2. Context\\n\\n* <Some contextual information 1>\\n* <Some contextual information 2>\\n* <Some contextual information 3>\\n\\nh2. Acceptance Criteria\\n\\n* <Acceptance criteria bullet point 1 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 2 (functional and/or non-functional requirement)>\\n* <Acceptance criteria bullet point 3 (functional and/or non-functional requirement)>\\n\\nh2. Resources\\n\\n* <Any relevant resource 1>\\n* <Any relevant resource 2>\",\n  \"labels\": [\"<new or pre-existing label 1 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\", \"<new or pre-existing label 2 (eg. 'API', 'UI', 'QA', 'Storybook', 'V0.0.1', 'Future_Release')\"],\n  \"fixVersion\": \"<Either our current fixVersion, 'V0.0.1', or our future next release, 'V0.0.2'>\",\n  \"epicId\": \"<If a pre-existing suitable epic exists from our pre-existing Jira Stories, then use its id here>\"\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[1040,220],"id":"de2b9586-56ad-4d9f-b7f0-a1c83928e930","name":"Structured Output Parser"},{"parameters":{"assignments":{"assignments":[{"id":"06ca2087-c916-458f-be4f-eb0408da3ddb","name":"Jira Ticket Type","value":"={{ $json.output.issueType }}","type":"string"},{"id":"8509fecc-88ff-49d4-979b-6dccf47067db","name":"Jira Ticket Summary","value":"={{ $json.output.summary }}","type":"string"},{"id":"0c5fbda3-b23e-4a9b-a59d-8694b00984df","name":"Jira Ticket Description","value":"={{ $json.output.description }}","type":"string"},{"id":"8529b325-89e6-4e4e-b769-1385793a4862","name":"Jira Ticket Labels","value":"={{ $json.output.labels }}","type":"array"},{"id":"5b4def9a-5958-4f1f-baa4-9eacc990adbc","name":"Jira Ticket Fix Version","value":"={{ $json.output.fixVersion }}","type":"string"},{"id":"53f21fdf-ee8f-4d53-a8b9-130f927eaf69","name":"Jira Ticket Epic Id","value":"={{ $json.output.epicId }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1240,0],"id":"caf4aacb-4a5d-48f5-972d-f3a77c5a38c6","name":"Edit Fields"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get Project Overview","type":"main","index":0}]]},"Anthropic Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Get Jira Stories":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Get Project Overview":{"main":[[{"node":"Get Jira Stories","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Basic LLM Chain","type":"ai_outputParser","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"query":"Add a story for setting up TestRail as our test management tool of choice"}}]},"versionId":"840cdc8d-afdb-45b3-9aba-1f206d95e5ac","triggerCount":0,"tags":[{"createdAt":"2025-03-15T21:05:41.244Z","updatedAt":"2025-03-15T21:05:41.244Z","id":"ih8CxVgZf4Pe6Ci8","name":"Product Management"}]},{"createdAt":"2024-02-23T16:58:31.616Z","updatedAt":"2024-02-23T16:58:31.616Z","id":"srOnR8PAY3u4RSwb","name":"Demo workflow","active":false,"nodes":[{"parameters":{},"id":"74003dcd-2ac7-4caa-a1cd-adecc5143c07","name":"Chat Trigger","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1,"position":[660,340],"webhookId":"cdb5c076-d458-4b9d-8398-f43bd25059b1"},{"parameters":{},"id":"ce8c3da4-899c-4cc4-af73-8096c64eec64","name":"Basic LLM Chain","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.3,"position":[880,340]},{"parameters":{"model":"llama3.2:latest","options":{}},"id":"3dee878b-d748-4829-ac0a-cfd6705d31e5","name":"Ollama Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[900,560],"credentials":{"ollamaApi":{"id":"xHuYe0MDGOs9IpBW","name":"Local Ollama service"}}}],"connections":{"Chat Trigger":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Ollama Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"4e2affe6-bb1c-4ddc-92f9-dde0b7656796","triggerCount":0,"tags":[]}]